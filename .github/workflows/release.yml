name: Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no publishing)'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          # Fetch full history for GitHub info-enhanced changelog
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10.15.1

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # stable
        with:
          toolchain: stable

      - name: Install Node.js Dependencies (without scripts)
        run: pnpm install --ignore-scripts

      - name: Build TypeScript
        run: pnpm run build:ts

      - name: Run postinstall script
        run: pnpm run postinstall

      - name: Configure npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          npm whoami

      - name: Check Changesets Status (Dry Run)
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "🔍 Running in dry-run mode..."
          pnpm changeset status --verbose
          echo "📋 Version changes preview:"
          pnpm changeset version --dry-run || echo "No changesets to process"

      - name: Create Release Pull Request or Publish
        if: github.event.inputs.dry_run != 'true'
        id: changesets
        uses: changesets/action@aba318e9165b45b7948c60273e0b72fce0a64eb9 # v1.4.7
        with:
          version: pnpm version
          publish: pnpm release
          title: "chore: version packages"
          commit: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          
          echo "## 🚀 Release v${PACKAGE_VERSION}" > release_notes.md
          echo "" >> release_notes.md
          echo "### 📦 Installation" >> release_notes.md
          echo "" >> release_notes.md
          echo "**npm:**" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "npm install -g ${PACKAGE_NAME}" >> release_notes.md
          echo "\`\`\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Cargo:**" >> release_notes.md
          echo "\`\`\`bash" >> release_notes.md
          echo "cargo install ${PACKAGE_NAME}" >> release_notes.md
          echo "\`\`\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "### 🔗 Links" >> release_notes.md
          echo "- 📦 [NPM Package](https://www.npmjs.com/package/${PACKAGE_NAME})" >> release_notes.md
          echo "- 🦀 [Crates.io Package](https://crates.io/crates/${PACKAGE_NAME})" >> release_notes.md
          
          gh release create "v${PACKAGE_VERSION}" \
            --title "Release v${PACKAGE_VERSION}" \
            --notes-file release_notes.md \
            --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Summary
        if: steps.changesets.outputs.published == 'true'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "🎉 Successfully published packages!"
          echo "📦 NPM: https://www.npmjs.com/package/gh-labeler"
          echo "🦀 Crates.io: https://crates.io/crates/gh-labeler"
          echo "🏷️ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/v${PACKAGE_VERSION}"

      - name: Dry Run Summary
        if: github.event.inputs.dry_run == 'true'
        run: |
          echo "✅ Dry run completed successfully!"
          echo "🔍 No actual publishing was performed."
          echo "📝 Check the logs above for preview of changes."
